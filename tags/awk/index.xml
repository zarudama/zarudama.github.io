<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>awk on My New Hugo Site</title>
    <link>http://example.org/tags/awk/</link>
    <description>Recent content in awk on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Mar 2014 14:01:39 +0900</lastBuildDate>
    
	<atom:link href="http://example.org/tags/awk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ちょい足しawkの基本</title>
      <link>http://example.org/posts/awk/</link>
      <pubDate>Tue, 25 Mar 2014 14:01:39 +0900</pubDate>
      
      <guid>http://example.org/posts/awk/</guid>
      <description>基本 コンマンドラインでちょい足し的に使うときのカンペ。
$ awk &#39;[BEGIN {各行を処理する前の処理}] [パターン] {各行の処理} [END {各行を処理した後の処理}]&#39;   BEGIEN, END, パターンは省略できる(&#34;[]&#34;でくくったもの) 例は以下。アクセスログのステータスコードが200のものを出力  awk &#39;$4 == &amp;quot;200&amp;quot; {print $4,$5}&#39;# $4が200のとき、$4,$5を表示 awk &#39;$4 != &amp;quot;200&amp;quot; { print }&#39; # $4が200でないとき、1行まるごと表示 awk &#39;$4 ~ /200/ { print }&#39; # $4が200のとき、1行まるごと表示(正規表現) awk &#39;$1 ~ /^a/ { print}&#39; # $1が&amp;quot;a&amp;quot;で始まるとき、表示(正規表現) awk &#39;$1 !~ /^a/{ print}&#39; # $1が&amp;quot;a&amp;quot;以外で始まるとき、表示(正規表現)  (例)
$ cat access.log | awk &#39;$4 = &amp;quot;200&amp;quot; {print $5$6}&#39; | sed &#39;s/\&amp;quot;//g&#39;  デリミタを変更するには Fオプションを使用する。カンマの場合は以下のとおり。</description>
    </item>
    
  </channel>
</rss>