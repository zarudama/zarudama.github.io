<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on My New Hugo Site</title>
    <link>http://example.org/tags/linux/</link>
    <description>Recent content in linux on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Mar 2014 14:01:39 +0900</lastBuildDate>
    
	<atom:link href="http://example.org/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ちょい足しawkの基本</title>
      <link>http://example.org/posts/awk/</link>
      <pubDate>Tue, 25 Mar 2014 14:01:39 +0900</pubDate>
      
      <guid>http://example.org/posts/awk/</guid>
      <description>基本 コンマンドラインでちょい足し的に使うときのカンペ。
$ awk &#39;[BEGIN {各行を処理する前の処理}] [パターン] {各行の処理} [END {各行を処理した後の処理}]&#39;   BEGIEN, END, パターンは省略できる(&#34;[]&#34;でくくったもの) 例は以下。アクセスログのステータスコードが200のものを出力  awk &#39;$4 == &amp;quot;200&amp;quot; {print $4,$5}&#39;# $4が200のとき、$4,$5を表示 awk &#39;$4 != &amp;quot;200&amp;quot; { print }&#39; # $4が200でないとき、1行まるごと表示 awk &#39;$4 ~ /200/ { print }&#39; # $4が200のとき、1行まるごと表示(正規表現) awk &#39;$1 ~ /^a/ { print}&#39; # $1が&amp;quot;a&amp;quot;で始まるとき、表示(正規表現) awk &#39;$1 !~ /^a/{ print}&#39; # $1が&amp;quot;a&amp;quot;以外で始まるとき、表示(正規表現)  (例)
$ cat access.log | awk &#39;$4 = &amp;quot;200&amp;quot; {print $5$6}&#39; | sed &#39;s/\&amp;quot;//g&#39;  デリミタを変更するには Fオプションを使用する。カンマの場合は以下のとおり。</description>
    </item>
    
    <item>
      <title>特定の日付より古いファイルを削除する方法</title>
      <link>http://example.org/posts/find-date-del/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/find-date-del/</guid>
      <description>例えば一年以上前の3/3より前(3/2以前)のログファイルを削除したい場合。
http://mikio.github.io/img/find-del/find1.png
findがすぐに思いつくが、findには日付指定のオプションが見あたらない。
答え touchでダミーファイルを作って、findのnewerオプションと否定演算子を使い、xargsとrmで削除する。
$ touch -t 201303030000 /tmp/hoge $ find /usr/local/apache/logs \! -newer /tmp/hoge|sort|less  中身を確認して問題なさそうなら
$ find /usr/local/apache/logs \! -newer /tmp/hoge|xargs rm  解説 普通に考えると find を使って -mtime などで日数を指定する。
$ find /usr/local/apache/logs -mtime +180|wc -l 554 $ find /usr/local/apache/logs -mtime +90|wc -l 757  でも今回の要件の場合日数を計算するのが面倒なので日付を直接指定して削除したい。 しかし man find してもそんなオプションはない。 だが良くみるとファイルのタイムスタンプを基準にするオプション newer ならある。 このオプションを使えばなんとかなりそうである。
まず下記のようにダミーのファイルを作成する。
$ touch -t 201303030000 /tmp/hoge  tオプションの意味は YYYYMMDDhhmm 。詳細は man touch 参照。
で、このファイルのタイムスタンプを基準に newer を使えばよい。</description>
    </item>
    
  </channel>
</rss>